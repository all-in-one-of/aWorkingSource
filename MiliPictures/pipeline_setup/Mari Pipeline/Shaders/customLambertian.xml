<Node>
  <ID>MY_EXAMPLE_Lambertian_Diffuse</ID>
  <Inputs>
    <Input Name="DiffuseColor" PrettyName="Diffuse Color" PreferredInput='1'></Input>
    <Input Name="Normal"></Input>
  </Inputs>
  <Attributes>
  </Attributes>
  <Tags>
    <Tag>_notcacheable</Tag>
    <Tag>_diffuse</Tag>
  </Tags>
    <Contexts>
        <Context Type="GLSL">
            <Shader ShaderType='Fragment'>
                <Inputs>
                    <Input Name="DiffuseColor"><Default>vec4(0,0,0,0)</Default></Input>
                    <Input Name="Normal"><Default>vec4(0,0,1,1)</Default></Input>
                </Inputs>
                <Body><![CDATA[
    vec3 N = #Normal.xyz;

    vec3 Diffuse = vec3(0.0);

    for(int i=0;i<4;i++)
    {
        //Light Direction
        vec3 L = normalize(u_MriLightSources[i].Position.xyz - State.FragmentPositionInEyeSpaceFromViewCamera);
        float LdotN = max(dot(L,N),0.0);

        float LightVisibility = mriLightVisibility( i, State.Position);

        // Lambertian Diffuse
        Diffuse += LdotN * u_MriLightSources[i].DiffuseColor.rgb * LightVisibility; 
    }

    Output.rgb = Diffuse * #DiffuseColor.rgb;
    Output.a = #DiffuseColor.a;
                ]]></Body>
            </Shader>
        </Context>
    </Contexts>
</Node>
