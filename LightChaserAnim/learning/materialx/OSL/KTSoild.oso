OpenShadingLanguage 1.00
# Compiled by oslc 1.9.0dev
# options: -o /home/xukai/Git/git_repo/aWorkingSource/LightChaserAnim/learning/materialx/OSL/KTSoild.oso.80cb-7a66-7089-1939.tmp
shader KTSoild
param	float	eta	0		%read{11,50} %write{2147483647,-1}
oparam	color	outColor	0 0 0		%read{2147483647,-1} %write{59,59}
global	vector	I	%read{1,49} %write{2147483647,-1}
global	normal	N	%read{1,53} %write{2147483647,-1}
local	float	___237_IdotN	%read{42,50} %write{40,40}
local	float	___237_k	%read{46,51} %write{45,45}
local	float	___238_c	%read{2,30} %write{1,4}
local	float	___238_g	%read{16,30} %write{15,18}
local	float	___240_beta	%read{23,31} %write{19,19}
local	float	___240_F	%read{27,35} %write{25,34}
local	float	Kr	%read{36,36} %write{35,56}
local	float	Kt	%read{59,59} %write{38,57}
local	vector	R	%read{2147483647,-1} %write{9,9}
local	vector	T	%read{2147483647,-1} %write{48,58}
const	string	$const1	"fresnel"		%read{0,0} %write{2147483647,-1}
const	int	$const2	0		%read{2,46} %write{2147483647,-1}
temp	int	$tmp1	%read{3,3} %write{2,2}
const	string	$const3	"reflect"		%read{5,5} %write{2147483647,-1}
temp	float	$tmp2	%read{7,7} %write{6,6}
temp	float	$tmp3	%read{8,8} %write{7,7}
const	float	$const5	2		%read{7,7} %write{2147483647,-1}
temp	vector	$tmp4	%read{9,9} %write{8,8}
const	float	$const6	1		%read{12,56} %write{2147483647,-1}
temp	float	$tmp5	%read{12,12} %write{11,11}
const	string	$const7	"sqr"		%read{10,32} %write{2147483647,-1}
temp	float	$tmp6	%read{13,13} %write{12,12}
temp	float	$tmp7	%read{15,15} %write{13,13}
temp	float	$tmp8	%read{15,15} %write{14,14}
const	float	$const8	0		%read{16,57} %write{2147483647,-1}
temp	int	$tmp9	%read{17,17} %write{16,16}
temp	float	$tmp10	%read{21,21} %write{20,20}
temp	float	$tmp11	%read{22,22} %write{21,21}
temp	float	$tmp12	%read{25,25} %write{22,22}
temp	float	$tmp13	%read{24,24} %write{23,23}
temp	float	$tmp14	%read{25,25} %write{24,24}
const	float	$const9	0.5		%read{29,29} %write{2147483647,-1}
temp	float	$tmp15	%read{28,28} %write{27,27}
temp	float	$tmp16	%read{29,29} %write{28,28}
temp	float	$tmp17	%read{34,34} %write{33,33}
temp	float	$tmp18	%read{31,31} %write{30,30}
temp	float	$tmp19	%read{33,33} %write{31,31}
temp	float	$tmp20	%read{37,37} %write{36,36}
temp	float	$tmp21	%read{38,38} %write{37,37}
const	string	$const10	"refract"		%read{39,39} %write{2147483647,-1}
temp	float	$tmp22	%read{44,44} %write{41,41}
temp	float	$tmp23	%read{43,43} %write{42,42}
temp	float	$tmp24	%read{44,44} %write{43,43}
temp	float	$tmp25	%read{45,45} %write{44,44}
temp	int	$tmp26	%read{47,47} %write{46,46}
const	vector	$const12	0 0 0		%read{48,58} %write{2147483647,-1}
temp	vector	$tmp27	%read{54,54} %write{49,49}
temp	float	$tmp28	%read{52,52} %write{50,50}
temp	float	$tmp29	%read{52,52} %write{51,51}
temp	float	$tmp30	%read{53,53} %write{52,52}
temp	vector	$tmp31	%read{54,54} %write{53,53}
code ___main___
# Git/git_repo/aWorkingSource/LightChaserAnim/learning/materialx/OSL/KTSoild.osl:8
#     outColor = color(Kt);
	functioncall	$const1 59 	%filename{"Git/git_repo/aWorkingSource/LightChaserAnim/learning/materialx/OSL/KTSoild.osl"} %line{8} %argrw{"r"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:227
#     float c = dot(I, N);
	dot		___238_c I N 	%filename{"Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h"} %line{227} %argrw{"wrr"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:228
#     if (c < 0)
	lt		$tmp1 ___238_c $const2 	%line{228} %argrw{"wrr"}
	if		$tmp1 5 5 	%argrw{"r"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:229
#         c = -c;
	neg		___238_c ___238_c 	%line{229} %argrw{"wr"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:230
#     R = reflect(I, N);
	functioncall	$const3 10 	%line{230} %argrw{"r"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:216
# vector reflect (vector I, vector N) { return I - 2*dot(N,I)*N; }
	dot		$tmp2 N I 	%line{216} %argrw{"wrr"}
	mul		$tmp3 $const5 $tmp2 	%argrw{"wrr"}
	mul		$tmp4 $tmp3 N 	%argrw{"wrr"}
	sub		R I $tmp4 	%argrw{"wrr"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:231
#     float g = 1.0 / sqr(eta) - 1.0 + c * c;
	functioncall	$const7 12 	%line{231} %argrw{"r"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:226
#     float sqr(float x) { return x*x; }
	mul		$tmp5 eta eta 	%line{226} %argrw{"wrr"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:231
#     float g = 1.0 / sqr(eta) - 1.0 + c * c;
	div		$tmp6 $const6 $tmp5 	%line{231} %argrw{"wrr"}
	sub		$tmp7 $tmp6 $const6 	%argrw{"wrr"}
	mul		$tmp8 ___238_c ___238_c 	%argrw{"wrr"}
	add		___238_g $tmp7 $tmp8 	%argrw{"wrr"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:232
#     if (g >= 0.0) {
	ge		$tmp9 ___238_g $const8 	%line{232} %argrw{"wrr"}
	if		$tmp9 56 59 	%argrw{"r"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:233
#         g = sqrt (g);
	sqrt		___238_g ___238_g 	%line{233} %argrw{"wr"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:234
#         float beta = g - c;
	sub		___240_beta ___238_g ___238_c 	%line{234} %argrw{"wrr"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:235
#         float F = (c * (g+c) - 1.0) / (c * beta + 1.0);
	add		$tmp10 ___238_g ___238_c 	%line{235} %argrw{"wrr"}
	mul		$tmp11 ___238_c $tmp10 	%argrw{"wrr"}
	sub		$tmp12 $tmp11 $const6 	%argrw{"wrr"}
	mul		$tmp13 ___238_c ___240_beta 	%argrw{"wrr"}
	add		$tmp14 $tmp13 $const6 	%argrw{"wrr"}
	div		___240_F $tmp12 $tmp14 	%argrw{"wrr"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:236
#         F = 0.5 * (1.0 + sqr(F));
	functioncall	$const7 28 	%line{236} %argrw{"r"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:226
#     float sqr(float x) { return x*x; }
	mul		$tmp15 ___240_F ___240_F 	%line{226} %argrw{"wrr"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:236
#         F = 0.5 * (1.0 + sqr(F));
	add		$tmp16 $const6 $tmp15 	%line{236} %argrw{"wrr"}
	mul		___240_F $const9 $tmp16 	%argrw{"wrr"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:237
#         F *= sqr (beta / (g+c));
	add		$tmp18 ___238_g ___238_c 	%line{237} %argrw{"wrr"}
	div		$tmp19 ___240_beta $tmp18 	%argrw{"wrr"}
	functioncall	$const7 34 	%argrw{"r"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:226
#     float sqr(float x) { return x*x; }
	mul		$tmp17 $tmp19 $tmp19 	%line{226} %argrw{"wrr"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:237
#         F *= sqr (beta / (g+c));
	mul		___240_F ___240_F $tmp17 	%line{237} %argrw{"wrr"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:238
#         Kr = F;
	assign		Kr ___240_F 	%line{238} %argrw{"wr"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:239
#         Kt = (1.0 - Kr) * eta*eta;
	sub		$tmp20 $const6 Kr 	%line{239} %argrw{"wrr"}
	mul		$tmp21 $tmp20 eta 	%argrw{"wrr"}
	mul		Kt $tmp21 eta 	%argrw{"wrr"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:242
#         T = refract(I, N, eta);
	functioncall	$const10 56 	%line{242} %argrw{"r"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:218
#     float IdotN = dot (I, N);
	dot		___237_IdotN I N 	%line{218} %argrw{"wrr"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:219
#     float k = 1 - eta*eta * (1 - IdotN*IdotN);
	mul		$tmp22 eta eta 	%line{219} %argrw{"wrr"}
	mul		$tmp23 ___237_IdotN ___237_IdotN 	%argrw{"wrr"}
	sub		$tmp24 $const6 $tmp23 	%argrw{"wrr"}
	mul		$tmp25 $tmp22 $tmp24 	%argrw{"wrr"}
	sub		___237_k $const6 $tmp25 	%argrw{"wrr"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:220
#     return (k < 0) ? vector(0,0,0) : (eta*I - N * (eta*IdotN + sqrt(k)));
	lt		$tmp26 ___237_k $const2 	%line{220} %argrw{"wrr"}
	if		$tmp26 49 55 	%argrw{"r"}
	assign		T $const12 	%argrw{"wr"}
	mul		$tmp27 eta I 	%argrw{"wrr"}
	mul		$tmp28 eta ___237_IdotN 	%argrw{"wrr"}
	sqrt		$tmp29 ___237_k 	%argrw{"wr"}
	add		$tmp30 $tmp28 $tmp29 	%argrw{"wrr"}
	mul		$tmp31 N $tmp30 	%argrw{"wrr"}
	sub		T $tmp27 $tmp31 	%argrw{"wrr"}
	return
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:245
#         Kr = 1.0;
	assign		Kr $const6 	%line{245} %argrw{"wr"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:246
#         Kt = 0.0;
	assign		Kt $const8 	%line{246} %argrw{"wr"}
# Git/git_repo/katana/arnold/ktoa-2.1.0.0-kat3.0/osl/include/stdosl.h:247
#         T = vector (0,0,0);
	assign		T $const12 	%line{247} %argrw{"wr"}
# Git/git_repo/aWorkingSource/LightChaserAnim/learning/materialx/OSL/KTSoild.osl:9
# }
	assign		outColor Kt 	%filename{"Git/git_repo/aWorkingSource/LightChaserAnim/learning/materialx/OSL/KTSoild.osl"} %line{9} %argrw{"wr"}
	end
